---
# https://medium.com/@_oleksii_/how-to-install-tune-mongodb-using-ansible-693a40495ca1

- name: Check if already installed
  stat:
    path: "/etc/mongod.conf"
  register: mongodb

- name: Add Mongo packages repo
  become: yes
  apt_key: 
      url: https://www.mongodb.org/static/pgp/server-4.4.asc
  when: mongodb.stat.exists == False

- name: add repo itself
  become: yes
  apt_repository: 
      repo: 'deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse' 
      state: present                                      
  when: mongodb.stat.exists == False

- name: install mongoDB
  become: yes
  apt: 
    pkg: mongodb-org 
    state: present
    update_cache: yes
  when: mongodb.stat.exists == False


- name: copy config file
  become: yes
  template:
    src: mongodb.conf.j2
    dest: /etc/mongod.conf
    owner: "{{ ansible_user_name }}"
    group: "{{ ansible_user_name }}"
    mode: 655
  when: mongodb.stat.exists == False
  
- name: Change file ownership and group 
  become: yes
  file: 
    dest: /var/lib/mongodb 
    owner: mongodb 
    group: mongodb 
    recurse: yes
  when: mongodb.stat.exists == False
 
- name: Change file ownership and group 
  become: yes
  file: 
    dest: /tmp/mongodb-27017.sock 
    owner: mongodb 
    group: mongodb
    state: touch
  notify:
   - restart mongod
  when: mongodb.stat.exists == False

 


# - name: create /etc/security/limits.d/mongodb.conf
#   become: yes
#   copy:
#     src: security-mongodb.conf
#     dest: /etc/security/limits.d/mongod.conf
#     owner: "{{ ansible_user_name }}"
#     group: "{{ ansible_user_name }}"
#     mode: 655
#   notify:
#     - restart mongodb
#   when: mongodb.stat.exists == False


# - name:  Set vm.dirty_ratio 
#   become: yes
#   sysctl:
#     name: vm.dirty_ratio
#     value: '15'
#     state: present
#   when: mongodb.stat.exists == False


# - name:  Set vm.dirty_background_ratio 
#   become: yes
#   sysctl:
#     name: vm.dirty_background_ratio
#     value: '5'
#     state: present
#   when: mongodb.stat.exists == False


# - name: Set vm.swappiness
#   become: yes  
#   sysctl:
#     name: vm.swappiness
#     value: '10'
#     state: present
#   when: mongodb.stat.exists == False


# - name: Set net.core.somaxconn 
#   become: yes
#   sysctl:
#     name: net.core.somaxconn
#     value: '4096'
#     state: present
#   when: mongodb.stat.exists == False


# - name: Set net.ipv4.tcp_fin_timeout
#   become: yes
#   sysctl:
#     name: net.ipv4.tcp_fin_timeout
#     value: '30'
#     state: present
#   when: mongodb.stat.exists == False


# - name: net.ipv4.tcp_keepalive_intvl
#   become: yes
#   sysctl:
#     name: net.ipv4.tcp_keepalive_intvl
#     value: '30'
#     state: present
#   when: mongodb.stat.exists == False


# - name: net.ipv4.tcp_keepalive_time
#   become: yes
#   sysctl:
#     name: net.ipv4.tcp_keepalive_time
#     value: '120'
#     state: present
#   when: mongodb.stat.exists == False


# - name: net.ipv4.tcp_max_syn_backlog 
#   become: yes
#   sysctl:
#     name: net.ipv4.tcp_max_syn_backlog 
#     value: '4096'
#     state: present
#   when: mongodb.stat.exists == False


# - name: Ensure mongodb is running and and enabled to start automatically on reboots
#   become: yes
#   systemd:
#     name: mongod
#     enabled: yes
#     state: started
#   when: mongodb.stat.exists == False


- name: install ntp
  become: yes
  apt: 
    name: ntp
    state: present
    update_cache: yes
  when: mongodb.stat.exists == False
